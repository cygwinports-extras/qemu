--- origsrc/qemu-1.4.2/configure	2013-05-24 08:37:57.000000000 -0500
+++ src/qemu-1.4.2/configure	2013-06-26 16:12:37.129379900 -0500
@@ -414,10 +414,10 @@ fi
 
 case $targetos in
 CYGWIN*)
-  mingw32="yes"
-  QEMU_CFLAGS="-mno-cygwin $QEMU_CFLAGS"
-  audio_possible_drivers="winwave sdl"
-  audio_drv_list="winwave"
+  cygwin="yes"
+  audio_drv_list="oss"
+  audio_possible_drivers="oss sdl esd pa"
+  LIBS="$LIBS -liphlpapi"
 ;;
 MINGW32*)
   mingw32="yes"
@@ -3465,6 +3465,9 @@ fi
 if test "$haiku" = "yes" ; then
   echo "CONFIG_HAIKU=y" >> $config_host_mak
 fi
+if test "$cygwin" = "yes" ; then
+  echo "CONFIG_CYGWIN=y" >> $config_host_mak
+fi
 if test "$static" = "yes" ; then
   echo "CONFIG_STATIC=y" >> $config_host_mak
 fi
--- origsrc/qemu-1.4.2/net/Makefile.objs	2013-05-24 08:37:57.000000000 -0500
+++ src/qemu-1.4.2/net/Makefile.objs	2013-06-26 16:12:37.135380700 -0500
@@ -1,9 +1,10 @@
 common-obj-y = net.o queue.o checksum.o util.o hub.o
 common-obj-y += socket.o
 common-obj-y += dump.o
-common-obj-$(CONFIG_POSIX) += tap.o
+common-obj-$(CONFIG_POSIX)$(CONFIG_CYGWIN) += tap.o
 common-obj-$(CONFIG_LINUX) += tap-linux.o
 common-obj-$(CONFIG_WIN32) += tap-win32.o
+common-obj-$(CONFIG_CYGWIN) += tap-win32.o
 common-obj-$(CONFIG_BSD) += tap-bsd.o
 common-obj-$(CONFIG_SOLARIS) += tap-solaris.o
 common-obj-$(CONFIG_AIX) += tap-aix.o
--- origsrc/qemu-1.4.2/net/net.c	2013-05-24 08:37:57.000000000 -0500
+++ src/qemu-1.4.2/net/net.c	2013-06-26 16:12:37.147382200 -0500
@@ -41,7 +41,7 @@
 #include "qapi/dealloc-visitor.h"
 
 /* Net bridge is currently not supported for W32. */
-#if !defined(_WIN32)
+#if !defined(_WIN32) && !defined(__CYGWIN__)
 # define CONFIG_NET_BRIDGE
 #endif
 
--- origsrc/qemu-1.4.2/net/tap-win32.c	2013-05-24 08:37:57.000000000 -0500
+++ src/qemu-1.4.2/net/tap-win32.c	2013-06-26 16:12:37.141381400 -0500
@@ -641,7 +641,9 @@ static void tap_cleanup(NetClientState *
 {
     TAPState *s = DO_UPCAST(TAPState, nc, nc);
 
+#ifndef __CYGWIN__
     qemu_del_wait_object(s->handle->tap_semaphore, NULL, NULL);
+#endif
 
     /* FIXME: need to kill thread and close file handle:
        tap_win32_close(s);
@@ -697,7 +699,9 @@ static int tap_win32_init(NetClientState
 
     s->handle = handle;
 
+#ifndef __CYGWIN__
     qemu_add_wait_object(s->handle->tap_semaphore, tap_win32_send, s);
+#endif
 
     return 0;
 }
--- origsrc/qemu-1.4.2/slirp/slirp.c	2013-05-24 08:37:57.000000000 -0500
+++ src/qemu-1.4.2/slirp/slirp.c	2013-06-26 16:12:37.153883000 -0500
@@ -27,6 +27,15 @@
 #include "slirp.h"
 #include "hw/hw.h"
 
+#ifdef __CYGWIN__
+#define WIN32_LEAN_AND_MEAN
+#include <windows.h>
+#include <iphlpapi.h>
+#undef _WIN32
+#define GlobalAlloc(type, size)  malloc(size)
+#define GlobalFree(ptr)  free(ptr)
+#endif
+
 /* host loopback address */
 struct in_addr loopback_addr;
 /* host loopback network mask */
@@ -52,9 +61,13 @@ static QTAILQ_HEAD(slirp_instances, Slir
 static struct in_addr dns_addr;
 static u_int dns_addr_time;
 
-#ifdef _WIN32
+#if defined(_WIN32) || defined(__CYGWIN__)
 
+#ifdef __CYGWIN__
+static int win32_get_dns_addr(struct in_addr *pdns_addr)
+#else
 int get_dns_addr(struct in_addr *pdns_addr)
+#endif
 {
     FIXED_INFO *FixedInfo=NULL;
     ULONG    BufLen;
@@ -99,6 +112,10 @@ int get_dns_addr(struct in_addr *pdns_ad
     return 0;
 }
 
+#endif
+
+#ifdef _WIN32
+
 static void winsock_cleanup(void)
 {
     WSACleanup();
@@ -124,7 +141,11 @@ int get_dns_addr(struct in_addr *pdns_ad
         }
         old_stat = dns_addr_stat;
         if (stat("/etc/resolv.conf", &dns_addr_stat) != 0)
+#ifdef __CYGWIN__
+            return win32_get_dns_addr(pdns_addr);
+#else
             return -1;
+#endif
         if ((dns_addr_stat.st_dev == old_stat.st_dev)
             && (dns_addr_stat.st_ino == old_stat.st_ino)
             && (dns_addr_stat.st_size == old_stat.st_size)
@@ -136,7 +157,11 @@ int get_dns_addr(struct in_addr *pdns_ad
 
     f = fopen("/etc/resolv.conf", "r");
     if (!f)
+#ifdef __CYGWIN__
+        return win32_get_dns_addr(pdns_addr);
+#else
         return -1;
+#endif
 
 #ifdef DEBUG
     lprint("IP address of your DNS(s): ");
--- origsrc/qemu-1.4.2/slirp/slirp.h	2013-05-24 08:37:57.000000000 -0500
+++ src/qemu-1.4.2/slirp/slirp.h	2013-06-26 16:12:37.159383700 -0500
@@ -18,7 +18,7 @@ typedef char *caddr_t;
 #else
 # define ioctlsocket ioctl
 # define closesocket(s) close(s)
-# if !defined(__HAIKU__)
+# if !defined(O_BINARY)
 #  define O_BINARY 0
 # endif
 #endif
--- origsrc/qemu-1.4.2/util/compatfd.c	2013-05-24 08:37:58.000000000 -0500
+++ src/qemu-1.4.2/util/compatfd.c	2013-06-26 16:12:37.121378900 -0500
@@ -16,7 +16,9 @@
 #include "qemu-common.h"
 #include "qemu/compatfd.h"
 
+#ifdef CONFIG_SIGNALFD
 #include <sys/syscall.h>
+#endif
 #include <pthread.h>
 
 struct sigfd_compat_info
